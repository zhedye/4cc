// based on doom one theme: https://github.com/doomemacs/themes/blob/master/themes/doom-one-theme.el
// NOTE color format is hexadecimal, alpha rgb.
bg         = 0xFF23272e;
fg         = 0xFFbbc2cf;
bg_alt      = 0xFF21242b;
fg_alt      = 0xFF5B6268;

// These should represent a spectrum from bg to fg, where base0 is a starker
// bg and base8 is a starker fg. For example, if bg is light grey and fg is
// dark grey, base0 should be white and base8 should be black.
base0      = 0xFF1B2229;   
base1      = 0xFF1c1f24;
base2      = 0xFF202328;
base3      = 0xFF23272e;
base4      = 0xFF3f444a;
base5      = 0xFF5B6268;
base6      = 0xFF73797e;
base7      = 0xFF9ca0a4;
base8      = 0xFFDFDFDF;

grey       = 0xFF3f444a;
grey_transparent       = 0x803f444a;
red        = 0xFFff6c6b;
red_transparent        = 0x55ff6c6b;
bright_red = 0xffff0000;
orange     = 0xFFda8548;
orange_transparent     = 0x55da8548;
orange_extra_transparent = 0x22da8548;
green      = 0xFF98be65;
teal       = 0xFF4db5bd;
yellow     = 0xFFECBE7B;
yellow_transparent     = 0x88ECBE7B;
yellow_extra_transparent = 0x22ECBE7B;
blue       = 0xFF51afef;
dark_blue   = 0xFF2257A0;
dark_blue_transparent = 0x222257A0;
magenta    = 0xFFc678dd;
magenta_transparent    = 0x44c678dd;
violet     = 0xFFa9a1e1;
violet_transparent     = 0x77a9a1e1;
dark_violet_transparent = 0x596961a1;
cyan       = 0xFF46D9FF;
dark_cyan   = 0xFF5699AF;
white      = 0xFFFFFFFF;
black      = 0xFF000000;
black_transparent = 0x44000000;

defcolor_bar = bg_alt;
defcolor_bar_active = magenta;
defcolor_base = fg; // text color of the modeline bar
defcolor_pop1 = blue; // Query bar, lister text color
defcolor_pop2 = yellow; // command hotkey color

defcolor_back = bg; // background 

// command lister
defcolor_margin = base4;
defcolor_margin_hover = base4;
defcolor_margin_active = base5;
defcolor_list_item = {defcolor_margin, defcolor_back};
defcolor_list_item_hover = {defcolor_margin_hover, defcolor_margin};
defcolor_list_item_active = {defcolor_margin_active, defcolor_margin_active};
defcolor_cursor = green; // yellow_extra_transparent;
//defcolor_at_cursor = defcolor_back;
defcolor_at_cursor             = 0xffffffff;
defcolor_highlight_cursor_line = bg_alt;
defcolor_mark = grey;
defcolor_highlight = blue;
defcolor_at_highlight = defcolor_back;
defcolor_text_default = fg;
defcolor_comment = base6;
defcolor_comment_pop = {green, yellow}; // comment NOTE, TODO
defcolor_keyword = blue; // if, "string", return, ...
defcolor_str_constant = green;
defcolor_char_constant = defcolor_str_constant;
defcolor_int_constant = defcolor_str_constant;
defcolor_float_constant = defcolor_str_constant;
defcolor_bool_constant = defcolor_str_constant;
defcolor_include = defcolor_str_constant;
defcolor_preproc = blue;
defcolor_special_character = red;
defcolor_ghost_character = base5;

defcolor_paste = cyan;
defcolor_undo = violet;

defcolor_highlight_junk = orange_extra_transparent; // error line highlighting
defcolor_highlight_white = base4;

// nested code blocks background and text colors
defcolor_back_cycle = {bg, bg, bg, bg, bg_alt, base2, base3}; // arbitrary pattern
defcolor_text_cycle = {fg, fg, fg_alt, fg_alt};

defcolor_line_numbers_back = bg_alt;
defcolor_line_numbers_text = fg_alt;

/// BYP Colors
defcolor_function                   =  0xFFBDA3F9;
defcolor_type                       =  0xFFB84AFD;
defcolor_primitive                  =  0xFFB84AFD;
defcolor_macro                      =  0xFF579EA8;
defcolor_control                    =  defcolor_preproc;
defcolor_struct                     =  defcolor_keyword;
defcolor_non_text                   =  0xFFDAAEFE;
//defcolor_struct                   =  0xFF70A7F7;

/// Vim Colors
defcolor_vim_filebar_pop            =  0xFF8A4CDB;
defcolor_vim_chord_text             =  defcolor_text_default;
defcolor_vim_chord_unresolved       =  defcolor_mark;
defcolor_vim_chord_error            =  defcolor_special_character;

// NOTE(edye): see comments in 4coder_fluery.cpp
fleury_color_syntax_crap           = magenta; // ; {} () 
fleury_color_operators             = fg;
fleury_color_inactive_pane_overlay = black_transparent;
fleury_color_inactive_pane_background = base0;
fleury_color_file_progress_bar     = dark_violet_transparent;
fleury_color_brace_highlight       = { blue };
fleury_color_brace_line            = { grey_transparent }; // vertical scope indentation lines
fleury_color_brace_annotation      = { violet_transparent }; // annotate code at start of scope at the bottom of scope
fleury_color_index_product_type    = yellow; // structs, classes
fleury_color_index_sum_type        = yellow; // unions
fleury_color_index_function        = magenta; //function names
fleury_color_index_macro           = blue; // macros: #define, ...
fleury_color_index_constant        = green; // constants and enum
fleury_color_index_comment_tag     = violet; // @example_comment_tag
fleury_color_index_decl            = yellow; // declarations: max_u8, ...
fleury_color_cursor_macro          = orange; // cursor when macro is being recorded
fleury_color_cursor_power_mode     = base8;
fleury_color_cursor_inactive       = orange_transparent;
fleury_color_plot_cycle            = { blue, green, orange, red, magenta, cyan, violet, yellow, teal }; // colors for plotting
fleury_color_token_highlight       = yellow_transparent; // underline string cursor is at
fleury_color_token_minor_highlight = yellow_transparent; // other occurances of the string at the cursor
fleury_color_error_annotation      = bright_red;
fleury_color_lego_grab             = orange_transparent;
fleury_color_lego_splat            = orange_transparent;
fleury_color_comment_user_name     = yellow;
